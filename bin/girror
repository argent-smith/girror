#!/usr/bin/env ruby
#
# Author:: Pavel Argentov <argentoff@gmail.com>
# 
# Mirror the remote sftp site and store the changes in a local git repo.

$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

require 'optparse'
require 'girror'

help = <<HELP
Girror cli tool, version #{Girror::VERSION}.

Mirrors the remote sftp site and stores the changes in a local git repo.

Command Line Usage:
  
  girror [options] remote_uri

  remote_uri: a complete sftp uri of a remote location;

  remote_uri may be in the form of either "user:pass@host:path" or
  "host:path". In the latter case username is taken from the environment
  variable $USERNAME.

  Options:
HELP

options = {}
opts = OptionParser.new do |opts|
  opts.banner = help


  opts.on("-o [path]", "Output directory, should be a git repo workdir.") do |path|
    options[:to] = path
  end

  opts.on("-dr", "Dry run: only logs what's to be done") do |addr|
    options[:dr] = true
  end

  opts.on("-v", "Be verbose: display a lot of debugging stuff on stderr") do |addr|
    options[:verbose] = true
  end

  opts.on("-h", "Display help") do
    puts opts.help
    exit 1
  end
end

# Read command line options into `options` hash
opts.parse!

case ARGV.size
when 1
  options[:from] = ARGV[0]
  options[:to] = "." if options[:to].nil?
else
  puts "Incorrect arguments; use -h to see help."
  exit 1
end

Girror::Application.run options